import quand
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.svm import SVR             
from sklearn.model_selection import train_test_split     

df = quandl.get("WIKI/TSLA")   
print(df.head())                

df = df[['Adj. Close']]          
print(df.head())

forecast = 7                         
df['Prediction'] = df[['Adj. Close']].shift(-forecast)         
print(df.tail())   

X = np.array(df.drop(columns=['Prediction']))
      #Now remove the last 'n' rows
X = X[:-forecast]
print(X)

Y = np.array(df['Prediction'])        
Y = Y[:-forecast]
print(Y)

x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size= 0.2)

svr_rbf = SVR(kernel= 'rbf', C= 1e3, gamma = 0.1)                
svr_rbf.fit(x_train, y_train)

svm_confidence = svr_rbf.score(x_test, y_test)
print("svm confidence: ", svm_confidence)           

Lr = LinearRegression()
Lr.fit(x_test, y_test)            

Lr_confidence = Lr.score(x_test, y_test)
print("Lr confidence: ", Lr_confidence)  

X_forecast = np.array(df.drop(columns= ['Prediction']))[-forecast:]
print(X_forecast)

#Print Linear Regression Model predictions for the next 'n' days
Lr_Prediction = Lr.predict(X_forecast)
print(Lr_Prediction)

Lr_Prediction = Lr.predict(X_forecast)
print(Lr_Prediction)

svm_Prediction = svr_rbf.predict(X_forecast)
print(svm_Prediction)
