            #using machine learning models to forecast stock prices
import quandl
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.svm import SVR              #support vector machine algorithm
from sklearn.model_selection import train_test_split     #method being used to split and train data

#getting the stock data
df = quandl.get("WIKI/TSLA")   #df = dataframe
print(df.head())                #Take a look at the data

   #we only care about the adjusted close, so lets isolate it and re-print
df = df[['Adj. Close']]          #in this case, Adj. Close is our Independant Variable
print(df.head())

#Now, lets create a variable to predict out into the future
forecast = 2                         #how many 'n' days out 
                #Creating another column using the shift method so we have a Dependant Variable
df['Prediction'] = df[['Adj. Close']].shift(-forecast)         #Because we want to shift our data up 'n' days
print(df.tail())                            #At this point, the program does not tell us the prediction value of a future date yet

############################################################################################################

#Now lets create our independant dataset X
    #First, we convert the df into a np array
X = np.array(df.drop(columns=['Prediction']))
      #Now remove the last 'n' rows
X = X[:-forecast]
print(X)
